// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  relationMode = "prisma"
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model Store {
  id        String   @id @default(uuid())
  name      String
  userId    String
  billboards Billboard[] @relation("BillboardStore")
  categories Category[] @relation("StoreCategory")
  colors     Color[]    @relation("StoreColor")
  sizes      Size[]     @relation("StoreSize")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Billboard {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation("BillboardStore", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([storeId])
}

model Category {
  id        String   @id @default(uuid())
  name      String
  storeId   String
  store     Store    @relation("StoreCategory", fields: [storeId], references: [id])
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation("StoreSize", fields: [storeId], references: [id])
  name      String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([storeId])
}

model Color {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation("StoreColor", fields: [storeId], references: [id])
  name      String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}